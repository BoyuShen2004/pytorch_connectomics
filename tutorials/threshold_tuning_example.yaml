# Example configuration for affinity threshold tuning
#
# This example demonstrates how to automatically optimize post-processing
# parameters using skeleton-based metrics (NERL, VOI) with Optuna.
#
# Usage:
#   python scripts/tune_threshold.py --config tutorials/threshold_tuning_example.yaml

system:
  num_gpus: 1
  num_cpus: 4
  seed: 42

# Data configuration
data:
  # Validation data for threshold tuning
  val_image: "datasets/lucchi/test_image.h5"
  val_label: "datasets/lucchi/test_label.h5"

  # Skeleton file for metrics (required for NERL/VOI)
  # Generate from ground truth using funlib tools
  skeleton_path: "datasets/lucchi/test_skeleton.pkl"

  # Patch size for processing
  patch_size: [128, 128, 128]
  batch_size: 1

# Model configuration
model:
  # Pre-trained model checkpoint
  checkpoint: "outputs/best_model.ckpt"

  # Model architecture (must match trained model)
  architecture: monai_basic_unet3d
  in_channels: 1
  out_channels: 6  # 3 short-range + 3 long-range affinities

# Threshold tuning configuration
tuning:
  # Optimization method: 'grid_search' or 'optuna'
  method: optuna

  # Metric to optimize: 'nerl' (higher better) or 'voi_sum' (lower better)
  metric: nerl

  # Number of trials for Optuna (ignored for grid_search)
  n_trials: 50

  # Threshold search space
  threshold_range: [0.1, 0.9]  # [min, max]

  # For grid_search: specific thresholds to try
  grid_thresholds: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]

  # Multi-parameter optimization (optional)
  # Set to true to jointly optimize multiple parameters
  optimize_multiple: false

  # Parameter space for multi-parameter optimization
  param_space:
    threshold: [0.1, 0.9]
    min_instance_size: [50, 500]  # Small object removal
    # use_numba: true  # Fixed parameter (not optimized)

# Post-processing configuration
postprocess:
  # Post-processing function to use
  # Options: 'decode_affinity_cc', 'custom_function'
  function: decode_affinity_cc

  # Fixed parameters (not optimized)
  use_numba: true
  scale_factors: [1.0, 1.0, 1.0]
  remove_small_mode: 'background'

# Output configuration
output:
  # Where to save tuning results
  output_dir: "outputs/threshold_tuning"

  # Save detailed results
  save_all_trials: true

  # Save best segmentation
  save_best_segmentation: true

  # Visualizations
  plot_optimization_history: true
  plot_param_importance: true

# Logging
logging:
  verbose: true
  log_file: "outputs/threshold_tuning/tuning.log"
