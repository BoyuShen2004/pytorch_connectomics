# Lucchi dataset with automatic 80/20 train/val split
# This config demonstrates DeepEM-style volumetric splitting

experiment_name: lucchi_auto_split
description: Automatic 80/20 train/val split from single volume

# System
system:
  num_gpus: 1
  num_cpus: 4
  seed: 42

# Model
model:
  architecture: monai_basic_unet3d
  input_size: [18, 160, 160]
  output_size: [18, 160, 160]
  in_channels: 1
  out_channels: 1
  filters: [28, 36, 48, 64, 80]
  dropout: 0.0
  norm: instance
  loss_functions: [DiceLoss, BCEWithLogitsLoss]
  loss_weights: [1.0, 1.0]

# Data with automatic split
data:
  # Single volume will be split automatically
  train_image: datasets/Lucchi/img/train_im.tif
  train_label: datasets/Lucchi/label/train_label.tif

  # No separate val files needed - will use split from training volume
  val_image: null
  val_label: null

  patch_size: [18, 160, 160]
  pad_size: [2, 16, 16]
  batch_size: 4
  num_workers: 4
  pin_memory: true
  persistent_workers: true
  use_cache: true
  cache_rate: 1.0
  normalize: true
  mean: 0.5
  std: 0.5

  # Automatic Train/Val Split (DeepEM-style)
  split_enabled: true              # Enable automatic splitting
  split_train_range: [0.0, 0.8]    # Use first 80% for training
  split_val_range: [0.8, 1.0]      # Use last 20% for validation
  split_axis: 0                    # Split along Z-axis (depth)
  split_pad_val: true              # Pad validation to patch_size
  split_pad_mode: reflect          # Use reflection padding

# Optimizer
optimizer:
  name: AdamW
  lr: 0.0001
  weight_decay: 0.0001

# Scheduler
scheduler:
  name: CosineAnnealingLR
  warmup_epochs: 5
  warmup_start_lr: 0.000001
  min_lr: 0.000001
  t_max: 100

# Training
training:
  max_epochs: 100
  gradient_clip_val: 1.0
  accumulate_grad_batches: 1
  precision: "16-mixed"
  val_check_interval: 500
  check_val_every_n_epoch: 1
  log_every_n_steps: 50
  benchmark: true

# Checkpoint
checkpoint:
  save_top_k: 3
  monitor: val/dice
  mode: max
  save_last: true
  every_n_epochs: 1
  dirpath: outputs/lucchi_split/checkpoints/
  filename: epoch={epoch:03d}-val_dice={val/dice:.4f}

# Early stopping
early_stopping:
  enabled: true
  monitor: val/dice
  patience: 15
  mode: max
  min_delta: 0.001

# Augmentation
augmentation:
  enabled: true

  flip:
    enabled: true
    prob: 0.5

  rotate:
    enabled: true
    prob: 0.5

  elastic:
    enabled: true
    prob: 0.3
    sigma_range: [5.0, 8.0]
    magnitude_range: [50.0, 150.0]

  intensity:
    enabled: true
    gaussian_noise_prob: 0.3
    gaussian_noise_std: 0.05
    shift_intensity_prob: 0.3
    shift_intensity_offset: 0.1
    contrast_prob: 0.3
    contrast_range: [0.7, 1.4]

# Inference
inference:
  output_path: outputs/lucchi_split/results/
  stride: [9, 80, 80]
  overlap: 0.5
  test_time_augmentation: false

# Notes:
# - Single volume is automatically split 80/20 along Z-axis
# - First 80% (e.g., slices 0-80 of 100) used for training
# - Last 20% (e.g., slices 80-100) used for validation
# - Validation is automatically padded to match model input size
# - No need for separate validation files
# - This follows DeepEM's approach of spatial splitting
